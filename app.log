2025-08-24 16:39:49 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10452 (C:\Users\c6-std14\Desktop\LMS Last\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS Last\lms-backened-23)
2025-08-24 16:39:49 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-24 16:39:49 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-24 16:39:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-24 16:39:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 235 ms. Found 9 JPA repository interfaces.
2025-08-24 16:39:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-24 16:39:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-24 16:39:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-24 16:39:54 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-24 16:39:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4785 ms
2025-08-24 16:39:55 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-24 16:39:55 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-24 16:39:55 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-24 16:39:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-24 16:39:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-24 16:39:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-24 16:39:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-24 16:39:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-24 16:39:56 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-24 16:39:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-24 16:39:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-24 16:39:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-24 16:39:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-24 16:40:00 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-24 16:40:00 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-24 16:40:00 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-24 16:40:01 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-24 16:40:01 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-24 16:40:03 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-24 16:40:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-24 16:40:03 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 14.682 seconds (process running for 15.807)
2025-08-24 16:42:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-24 16:42:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-24 16:42:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-24 16:42:14 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6484 ms
2025-08-24 16:42:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:43:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:43:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-24 16:43:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:43:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, author, available_copies, book_cover_url, category_id, created_at, format, isbn, name, pdf_file_url, publication_year, short_details, total_copies, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-24 16:43:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:44:56 [http-nio-8080-exec-8] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-08-24 16:51:24 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-24 16:51:24 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-24 16:51:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-24 16:51:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-24 16:51:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-24 16:51:34 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 984 (C:\Users\c6-std14\Desktop\LMS Last\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS Last\lms-backened-23)
2025-08-24 16:51:34 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-24 16:51:34 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-24 16:51:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-24 16:51:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 210 ms. Found 9 JPA repository interfaces.
2025-08-24 16:51:39 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-24 16:51:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-24 16:51:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-24 16:51:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-24 16:51:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5115 ms
2025-08-24 16:51:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-24 16:51:41 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-24 16:51:41 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-24 16:51:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-24 16:51:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-24 16:51:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-24 16:51:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-24 16:51:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-24 16:51:42 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-24 16:51:44 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-24 16:51:44 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-24 16:51:44 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-24 16:51:45 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-24 16:51:46 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-24 16:51:46 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-24 16:51:46 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-24 16:51:47 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-24 16:51:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-24 16:51:49 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-24 16:51:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-24 16:51:49 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 15.358 seconds (process running for 16.125)
2025-08-24 16:52:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-24 16:52:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-24 16:52:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-24 16:52:21 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7988 ms
2025-08-24 16:52:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:53:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:53:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-24 16:53:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:53:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, author, available_copies, book_cover_url, category_id, created_at, format, isbn, name, pdf_file_url, publication_year, short_details, total_copies, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-24 16:53:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:54:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:54:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-24 16:54:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-24 16:54:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, author, available_copies, book_cover_url, category_id, created_at, format, isbn, name, pdf_file_url, publication_year, short_details, total_copies, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-24 16:54:32 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        borrows
        (book_id, borrow_date, created_at, due_date, extension_count, return_date, status, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:55:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        books 
    set
        about=?,
        audio_file_url=?,
        author=?,
        available_copies=?,
        book_cover_url=?,
        category_id=?,
        format=?,
        isbn=?,
        name=?,
        pdf_file_url=?,
        publication_year=?,
        short_details=?,
        total_copies=?,
        updated_at=? 
    where
        id=?
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        borrows
        (book_id, borrow_date, created_at, due_date, extension_count, return_date, status, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-24 16:57:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        books 
    set
        about=?,
        audio_file_url=?,
        author=?,
        available_copies=?,
        book_cover_url=?,
        category_id=?,
        format=?,
        isbn=?,
        name=?,
        pdf_file_url=?,
        publication_year=?,
        short_details=?,
        total_copies=?,
        updated_at=? 
    where
        id=?
